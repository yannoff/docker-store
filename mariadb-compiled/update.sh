#!/bin/bash
#
# Dockerfile builder script
#
# @package mariadb
# @author  yannoff <https://github.com/yannoff>
# @license MIT
#

builddeps="curl git g++ make cmake bison ncurses-dev libevent-dev openssl-dev libexecinfo-dev gnutls linux-headers"

generate(){
    local version
    version=$1
    [ -d "${version}" ] || mkdir ${version} 2>&1 >/dev/null
    cat > ${version}/Dockerfile <<EOT
# vim: ft=dockerfile
#
# This file is auto-generated by update.sh
#
# @package mariadb/${version}
# @author  yannoff <https://github.com/yannoff>
# @license MIT
#

FROM alpine:latest

MAINTAINER Yannoff <https://github.com/yannoff>

# Since MariaDB original entrypoint uses #!/bin/bash as shebang,
# we need bash
# TODO Use ash as an alternative using symlinking
RUN \\
    apk --update --no-cache add bash;

# MariaDB build:
RUN \\
    apk add ${builddeps}; \\
    apk add libssl1.0 libstdc++; \\
    tmpdir=\`mktemp -d\` && cd \$tmpdir; \\
    git clone https://github.com/MariaDB/server.git source; \\
    cd source && git checkout ${version} && cd -; \\
    mkdir build && cd build; \\
    cmake \\
        -DPLUGIN_TOKUDB=NO \\
        -DCMAKE_BUILD_TYPE=MinSizeRel \\
        -DMYSQL_DATADIR=/var/lib/mysql \\
        -DNOT_FOR_DISTRIBUTION=ON \\
        -DPLUGIN_DAEMON_EXAMPLE=NO \\
        -DPLUGIN_EXAMPLE=NO \\
        -DPLUGIN_EXAMPLE_KEY_MANAGEMENT=NO \\
        -DPLUGIN_FTEXAMPLE=NO \\
        -DWITH_UNIT_TESTS=OFF \\
        -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \\
        -DINSTALL_MANDIR=share/man \\
        -DINSTALL_BINDIR=/usr/bin \\
        -DINSTALL_LIBDIR=/var/lib \\
        -DINSTALL_MYSQLDATADIR=/var/lib/mysql \\
        ../source; \\
    make && make install; \\
    cd /; \\
    rm -rf \$tmpdir; 

#Post-install
RUN \\
    addgroup -S mysql; \\
    adduser -S -D -h /var/lib/mysql -s /sbin/nologin -G mysql -g mysql mysql; \\
    chown -R mysql /usr/local/mysql/; \\
    chown -R mysql /var/lib/mysql/;
# End build

# Fetch genuine entrypoint from mariadb official github repo, to be sure we have an up-to-date version
RUN \\
    curl https://raw.githubusercontent.com/docker-library/mariadb/master/${version}/docker-entrypoint.sh -o /docker-entrypoint.sh; \\
    chmod +x /docker-entrypoint.sh; \\
    ln -s /docker-entrypoint.sh /usr/local/bin/; \\
    apk del curl;

# Create socket dir
RUN \\
    mkdir /run/mysqld;

# Use su-exec as an alternative to gosu
RUN \\ 
    apk add --no-cache pwgen su-exec; \\
    ln -s \$(which su-exec) /sbin/gosu;

# Provide a link to mysql executables
RUN \\
    export PATH="\$PATH:/usr/local/mysql/bin/"; \\
    mv -v /usr/local/mysql/scripts/mysql_install_db /usr/bin; \\
    mv -v /usr/local/mysql/bin/mysqld /usr/bin; 

# Purge
RUN \\
    apk del ${builddeps}; \\
    rm -rf /usr/local/mysql/mysql-test && echo "/usr/local/mysql/mysql-test deleted!"; \\
    rm -rfv /usr/local/mysql/{bin,scripts}

ENTRYPOINT [ "/docker-entrypoint.sh" ]
CMD [ "mysqld" ]
VOLUME [ "/var/lib/mysql" ]
EXPOSE 3306
EOT
}

for v in "$@"
do
    generate $v
done
